// <auto-generated />
using System;
using AsanPardakht.Infrastructre.Persistence.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AsanPardakht.Infrastructre.Persistence.EfCore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230516093805_initialized_db")]
    partial class initialized_db
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence<int>("Cities")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence<int>("People")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.HasSequence<int>("Provinces")
                .HasMin(1L)
                .HasMax(2147483647L);

            modelBuilder.Entity("AsanPardakht.Core.Data.OutBoxEventData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AggregateId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AggregateType")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime>("IssuedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("IssuedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("ali.talebi");

                    b.Property<bool>("Read")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ReadAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OutBoxEvents", "Outbox");
                });

            modelBuilder.Entity("AsanPardakht.Domain.Cities.City", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Cities", "BaseInformation");
                });

            modelBuilder.Entity("AsanPardakht.Domain.People.Person", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("NationalCode")
                        .IsUnique()
                        .HasDatabaseName("IX_PEOPLE_NATIONALCODE");

                    b.ToTable("People", "People");
                });

            modelBuilder.Entity("AsanPardakht.Domain.Provinces.Province", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Provinces", "BaseInformation");
                });

            modelBuilder.Entity("AsanPardakht.Infrastructre.Persistence.EfCore.Views.GeneratedNewIdView", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.ToTable("GeneratedNewIdView", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("AsanPardakht.Domain.Cities.City", b =>
                {
                    b.HasOne("AsanPardakht.Domain.Provinces.Province", null)
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("AsanPardakht.Domain.People.Person", b =>
                {
                    b.OwnsMany("AsanPardakht.Domain.People.PersonAddress", "_addresses", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<int>("CityId")
                                .HasColumnType("int");

                            b1.Property<string>("Detail")
                                .IsRequired()
                                .HasMaxLength(1000)
                                .HasColumnType("nvarchar(1000)");

                            b1.Property<int>("PersonId")
                                .HasColumnType("int");

                            b1.Property<int>("ProvinceId")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("CityId");

                            b1.HasIndex("PersonId");

                            b1.HasIndex("ProvinceId");

                            b1.ToTable("PeopleAddresses", "People");

                            b1.HasOne("AsanPardakht.Domain.Cities.City", null)
                                .WithMany()
                                .HasForeignKey("CityId")
                                .OnDelete(DeleteBehavior.NoAction)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("PersonId");

                            b1.HasOne("AsanPardakht.Domain.Provinces.Province", null)
                                .WithMany()
                                .HasForeignKey("ProvinceId")
                                .OnDelete(DeleteBehavior.NoAction)
                                .IsRequired();
                        });

                    b.Navigation("_addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
